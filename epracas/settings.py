"""
Django settings for epracas project.

Generated by 'django-admin startproject' using Django 1.9.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os

import dj_database_url

import raven

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(__file__))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv(
        'SECRET_KEY',
        '3hla%03=fk)zgzk-o&r2-b=76cw^)4xropk$k79d2czond_y@@'
)

# SECURITY WARNING: don't run with debug turned on in production!
if os.getenv('DEBUG') or os.getenv('DEBUG') != "False":
    DEBUG = True
else:
    DEBUG = False


ALLOWED_HOSTS = (os.getenv('ALLOWED_HOSTS', 'localhost').split(','))


# Application definition
DJANGO_APPS = (
    # Default Django apps:
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Useful template tags:
    # 'django.contrib.humanize',

    # Admin
    # 'django.contrib.admin',
)
THIRD_PARTY_APPS = (
    'rest_framework_docs',
    'corsheaders',
    'raven.contrib.django.raven_compat',
    'rest_framework',
    'rest_localflavor'
)

# Apps specific for this project go here.
LOCAL_APPS = (
    'authentication',
    'core',
    'pracas',
    'gestor',
    'atividades',
)

INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + LOCAL_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'epracas.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'epracas/templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'epracas.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {'default': dj_database_url.config(
    default = 'postgres://postgres:1234@localhost/epracas_db'
)}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Django Rest Framework Configuration
REST_FRAMEWORK = {
    # Default Parser Classes
    # http://www.django-rest-framework.org/api-guide/parsers
    # 'DEFAULT_PARSER_CLASSES': {
    #     'rest_framework.parsers.JSONParser',
    #     'rest_framework.parsers.FormParser',
    #     'rest_framework.parsers.MultiPartParser',
    # },
}


# Custom User Model
AUTH_USER_MODEL = 'authentication.User'

# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = 'staticfiles'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

# Media files (Public Images from e-pracas entities)
# https://docs.djangoproject.com/en/1.10/ref/settings/#media-root
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

DOCUMENTS_ROOT = os.path.join(BASE_DIR, 'documents')
DOCUMENTS_URL = '/documents/'

USE_DJANGO_JQUERY = False

CORS_ORIGIN_ALLOW_ALL = True

if os.getenv('TEST_ENV'):
    # Desabilita as migracoes quando usarmos a configuracao de settings
    MIGRATION_MODULES = {
        'core': None,
        'atividades': None,
        'authentication': None,
        'pracas': None,
        'gestor': None,
    }

    # Usamos o backend em memoria para facilitar os testes
    EMAIL_BACKEND = 'django.core.mail.backends.locmem.EmailBackend'


    # Define CORS to allow client in development mode
    CORS_ORIGIN_WHITELIST = (
        'localhost:4000',
    )

OIDC_AUTH = {
        'OIDC_ENDPOINT': os.getenv(
            'OIDC_ENDPOINT',
            'https://id.cultura.gov.br'
            ),
        'OIDC_AUDIENCES': os.getenv(
            'OIDC_AUDIENCES',
            '18_t41s2lf05w0cwkw480owccsk4wwscgw00wo0s0so8c8c8c8ck'
            ),
        'OIDC_RESOLVE_USER_FUNCTION': 'oidc_auth.authentication.get_user_by_id',
        'OIDC_LEEWAY': 6000,
        'OIDC_JWKS_EXPIRATION_TIME': 24*60*60,
        'JWT_AUTH_HEADER_PREFIX': 'JWT',
        'BEARER_AUTH_HEADER_PREFIX': 'Bearer',
}

RAVEN_CONFIG = {
        'dsn': os.getenv('RAVEN_DSN_URL'),
        # If you are using git, you can also automatically configure the
        # release based on the git info.
        'release': raven.fetch_git_sha(BASE_DIR),
}

EVENTTOOLS_REPEAT_CHOICES = None

EMAIL_BACKEND = os.getenv('EMAIL_BACKEND','django.core.mail.backends.console.EmailBackend')
EMAIL_HOST = os.getenv('EMAIL_HOST', '')
EMAIL_PORT = os.getenv('EMAIL_PORT', 25)
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER', '')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD', '')
